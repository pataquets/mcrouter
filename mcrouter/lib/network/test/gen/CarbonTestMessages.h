/*
 *  Copyright (c) 2017-present, Facebook, Inc.
 *
 *  This source code is licensed under the MIT license found in the LICENSE
 *  file in the root directory of this source tree.
 *
 */

/*
 *  THIS FILE IS AUTOGENERATED. DO NOT MODIFY IT; ALL CHANGES WILL BE LOST IN
 *  VAIN.
 *
 *  @generated
 */
#pragma once

#include <memory>
#include <string>
#include <utility>

#include <folly/Optional.h>
#include <folly/io/IOBuf.h>
#include <mcrouter/lib/carbon/CarbonProtocolReader.h>
#include <mcrouter/lib/carbon/CommonSerializationTraits.h>
#include <mcrouter/lib/carbon/Keys.h>
#include <mcrouter/lib/carbon/ReplyCommon.h>
#include <mcrouter/lib/carbon/RequestCommon.h>
#include <mcrouter/lib/carbon/RequestReplyUtil.h>
#include <mcrouter/lib/carbon/Result.h>
#include <mcrouter/lib/carbon/TypeList.h>
#include <mcrouter/lib/carbon/Variant.h>

namespace facebook {
namespace memcache {
namespace test {

class ManyFields {
 public:

  ManyFields() = default;
  ManyFields(const ManyFields&) = default;
  ManyFields& operator=(const ManyFields&) = default;
  ManyFields(ManyFields&&) = default;
  ManyFields& operator=(ManyFields&&) = default;

  const folly::IOBuf& buf1() const {
    return buf1_;
  }
  folly::IOBuf& buf1() {
    return buf1_;
  }
  const folly::IOBuf& buf2() const {
    return buf2_;
  }
  folly::IOBuf& buf2() {
    return buf2_;
  }
  const folly::IOBuf& buf3() const {
    return buf3_;
  }
  folly::IOBuf& buf3() {
    return buf3_;
  }
  const folly::IOBuf& buf4() const {
    return buf4_;
  }
  folly::IOBuf& buf4() {
    return buf4_;
  }
  const folly::IOBuf& buf5() const {
    return buf5_;
  }
  folly::IOBuf& buf5() {
    return buf5_;
  }
  const folly::IOBuf& buf6() const {
    return buf6_;
  }
  folly::IOBuf& buf6() {
    return buf6_;
  }
  const folly::IOBuf& buf7() const {
    return buf7_;
  }
  folly::IOBuf& buf7() {
    return buf7_;
  }
  const folly::IOBuf& buf8() const {
    return buf8_;
  }
  folly::IOBuf& buf8() {
    return buf8_;
  }
  const folly::IOBuf& buf9() const {
    return buf9_;
  }
  folly::IOBuf& buf9() {
    return buf9_;
  }
  const folly::IOBuf& buf10() const {
    return buf10_;
  }
  folly::IOBuf& buf10() {
    return buf10_;
  }
  const folly::IOBuf& buf11() const {
    return buf11_;
  }
  folly::IOBuf& buf11() {
    return buf11_;
  }
  const folly::IOBuf& buf12() const {
    return buf12_;
  }
  folly::IOBuf& buf12() {
    return buf12_;
  }
  const folly::IOBuf& buf13() const {
    return buf13_;
  }
  folly::IOBuf& buf13() {
    return buf13_;
  }
  const folly::IOBuf& buf14() const {
    return buf14_;
  }
  folly::IOBuf& buf14() {
    return buf14_;
  }
  const folly::IOBuf& buf15() const {
    return buf15_;
  }
  folly::IOBuf& buf15() {
    return buf15_;
  }
  const folly::IOBuf& buf16() const {
    return buf16_;
  }
  folly::IOBuf& buf16() {
    return buf16_;
  }
  const folly::IOBuf& buf17() const {
    return buf17_;
  }
  folly::IOBuf& buf17() {
    return buf17_;
  }
  const folly::IOBuf& buf18() const {
    return buf18_;
  }
  folly::IOBuf& buf18() {
    return buf18_;
  }
  const folly::IOBuf& buf19() const {
    return buf19_;
  }
  folly::IOBuf& buf19() {
    return buf19_;
  }
  const folly::IOBuf& buf20() const {
    return buf20_;
  }
  folly::IOBuf& buf20() {
    return buf20_;
  }
  const folly::IOBuf& buf21() const {
    return buf21_;
  }
  folly::IOBuf& buf21() {
    return buf21_;
  }
  const folly::IOBuf& buf22() const {
    return buf22_;
  }
  folly::IOBuf& buf22() {
    return buf22_;
  }
  const folly::IOBuf& buf23() const {
    return buf23_;
  }
  folly::IOBuf& buf23() {
    return buf23_;
  }
  const folly::IOBuf& buf24() const {
    return buf24_;
  }
  folly::IOBuf& buf24() {
    return buf24_;
  }
  const folly::IOBuf& buf25() const {
    return buf25_;
  }
  folly::IOBuf& buf25() {
    return buf25_;
  }
  const folly::IOBuf& buf26() const {
    return buf26_;
  }
  folly::IOBuf& buf26() {
    return buf26_;
  }
  const folly::IOBuf& buf27() const {
    return buf27_;
  }
  folly::IOBuf& buf27() {
    return buf27_;
  }
  const folly::IOBuf& buf28() const {
    return buf28_;
  }
  folly::IOBuf& buf28() {
    return buf28_;
  }
  const folly::IOBuf& buf29() const {
    return buf29_;
  }
  folly::IOBuf& buf29() {
    return buf29_;
  }
  const folly::IOBuf& buf30() const {
    return buf30_;
  }
  folly::IOBuf& buf30() {
    return buf30_;
  }
  const folly::IOBuf& buf31() const {
    return buf31_;
  }
  folly::IOBuf& buf31() {
    return buf31_;
  }
  const folly::IOBuf& buf32() const {
    return buf32_;
  }
  folly::IOBuf& buf32() {
    return buf32_;
  }
  const folly::IOBuf& buf33() const {
    return buf33_;
  }
  folly::IOBuf& buf33() {
    return buf33_;
  }
  const folly::IOBuf& buf34() const {
    return buf34_;
  }
  folly::IOBuf& buf34() {
    return buf34_;
  }
  const folly::IOBuf& buf35() const {
    return buf35_;
  }
  folly::IOBuf& buf35() {
    return buf35_;
  }
  const folly::IOBuf& buf36() const {
    return buf36_;
  }
  folly::IOBuf& buf36() {
    return buf36_;
  }
  const folly::IOBuf& buf37() const {
    return buf37_;
  }
  folly::IOBuf& buf37() {
    return buf37_;
  }
  const folly::IOBuf& buf38() const {
    return buf38_;
  }
  folly::IOBuf& buf38() {
    return buf38_;
  }
  const folly::IOBuf& buf39() const {
    return buf39_;
  }
  folly::IOBuf& buf39() {
    return buf39_;
  }
  const folly::IOBuf& buf40() const {
    return buf40_;
  }
  folly::IOBuf& buf40() {
    return buf40_;
  }
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf1_ref() const& {
    return {this->buf1_, __isset.buf1};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf1_ref() & {
    return {this->buf1_, __isset.buf1};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf1_ref() && {
      return {std::move(this->buf1_), __isset.buf1};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf2_ref() const& {
    return {this->buf2_, __isset.buf2};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf2_ref() & {
    return {this->buf2_, __isset.buf2};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf2_ref() && {
      return {std::move(this->buf2_), __isset.buf2};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf3_ref() const& {
    return {this->buf3_, __isset.buf3};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf3_ref() & {
    return {this->buf3_, __isset.buf3};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf3_ref() && {
      return {std::move(this->buf3_), __isset.buf3};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf4_ref() const& {
    return {this->buf4_, __isset.buf4};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf4_ref() & {
    return {this->buf4_, __isset.buf4};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf4_ref() && {
      return {std::move(this->buf4_), __isset.buf4};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf5_ref() const& {
    return {this->buf5_, __isset.buf5};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf5_ref() & {
    return {this->buf5_, __isset.buf5};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf5_ref() && {
      return {std::move(this->buf5_), __isset.buf5};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf6_ref() const& {
    return {this->buf6_, __isset.buf6};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf6_ref() & {
    return {this->buf6_, __isset.buf6};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf6_ref() && {
      return {std::move(this->buf6_), __isset.buf6};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf7_ref() const& {
    return {this->buf7_, __isset.buf7};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf7_ref() & {
    return {this->buf7_, __isset.buf7};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf7_ref() && {
      return {std::move(this->buf7_), __isset.buf7};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf8_ref() const& {
    return {this->buf8_, __isset.buf8};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf8_ref() & {
    return {this->buf8_, __isset.buf8};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf8_ref() && {
      return {std::move(this->buf8_), __isset.buf8};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf9_ref() const& {
    return {this->buf9_, __isset.buf9};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf9_ref() & {
    return {this->buf9_, __isset.buf9};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf9_ref() && {
      return {std::move(this->buf9_), __isset.buf9};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf10_ref() const& {
    return {this->buf10_, __isset.buf10};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf10_ref() & {
    return {this->buf10_, __isset.buf10};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf10_ref() && {
      return {std::move(this->buf10_), __isset.buf10};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf11_ref() const& {
    return {this->buf11_, __isset.buf11};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf11_ref() & {
    return {this->buf11_, __isset.buf11};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf11_ref() && {
      return {std::move(this->buf11_), __isset.buf11};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf12_ref() const& {
    return {this->buf12_, __isset.buf12};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf12_ref() & {
    return {this->buf12_, __isset.buf12};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf12_ref() && {
      return {std::move(this->buf12_), __isset.buf12};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf13_ref() const& {
    return {this->buf13_, __isset.buf13};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf13_ref() & {
    return {this->buf13_, __isset.buf13};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf13_ref() && {
      return {std::move(this->buf13_), __isset.buf13};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf14_ref() const& {
    return {this->buf14_, __isset.buf14};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf14_ref() & {
    return {this->buf14_, __isset.buf14};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf14_ref() && {
      return {std::move(this->buf14_), __isset.buf14};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf15_ref() const& {
    return {this->buf15_, __isset.buf15};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf15_ref() & {
    return {this->buf15_, __isset.buf15};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf15_ref() && {
      return {std::move(this->buf15_), __isset.buf15};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf16_ref() const& {
    return {this->buf16_, __isset.buf16};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf16_ref() & {
    return {this->buf16_, __isset.buf16};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf16_ref() && {
      return {std::move(this->buf16_), __isset.buf16};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf17_ref() const& {
    return {this->buf17_, __isset.buf17};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf17_ref() & {
    return {this->buf17_, __isset.buf17};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf17_ref() && {
      return {std::move(this->buf17_), __isset.buf17};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf18_ref() const& {
    return {this->buf18_, __isset.buf18};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf18_ref() & {
    return {this->buf18_, __isset.buf18};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf18_ref() && {
      return {std::move(this->buf18_), __isset.buf18};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf19_ref() const& {
    return {this->buf19_, __isset.buf19};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf19_ref() & {
    return {this->buf19_, __isset.buf19};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf19_ref() && {
      return {std::move(this->buf19_), __isset.buf19};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf20_ref() const& {
    return {this->buf20_, __isset.buf20};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf20_ref() & {
    return {this->buf20_, __isset.buf20};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf20_ref() && {
      return {std::move(this->buf20_), __isset.buf20};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf21_ref() const& {
    return {this->buf21_, __isset.buf21};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf21_ref() & {
    return {this->buf21_, __isset.buf21};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf21_ref() && {
      return {std::move(this->buf21_), __isset.buf21};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf22_ref() const& {
    return {this->buf22_, __isset.buf22};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf22_ref() & {
    return {this->buf22_, __isset.buf22};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf22_ref() && {
      return {std::move(this->buf22_), __isset.buf22};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf23_ref() const& {
    return {this->buf23_, __isset.buf23};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf23_ref() & {
    return {this->buf23_, __isset.buf23};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf23_ref() && {
      return {std::move(this->buf23_), __isset.buf23};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf24_ref() const& {
    return {this->buf24_, __isset.buf24};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf24_ref() & {
    return {this->buf24_, __isset.buf24};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf24_ref() && {
      return {std::move(this->buf24_), __isset.buf24};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf25_ref() const& {
    return {this->buf25_, __isset.buf25};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf25_ref() & {
    return {this->buf25_, __isset.buf25};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf25_ref() && {
      return {std::move(this->buf25_), __isset.buf25};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf26_ref() const& {
    return {this->buf26_, __isset.buf26};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf26_ref() & {
    return {this->buf26_, __isset.buf26};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf26_ref() && {
      return {std::move(this->buf26_), __isset.buf26};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf27_ref() const& {
    return {this->buf27_, __isset.buf27};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf27_ref() & {
    return {this->buf27_, __isset.buf27};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf27_ref() && {
      return {std::move(this->buf27_), __isset.buf27};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf28_ref() const& {
    return {this->buf28_, __isset.buf28};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf28_ref() & {
    return {this->buf28_, __isset.buf28};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf28_ref() && {
      return {std::move(this->buf28_), __isset.buf28};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf29_ref() const& {
    return {this->buf29_, __isset.buf29};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf29_ref() & {
    return {this->buf29_, __isset.buf29};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf29_ref() && {
      return {std::move(this->buf29_), __isset.buf29};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf30_ref() const& {
    return {this->buf30_, __isset.buf30};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf30_ref() & {
    return {this->buf30_, __isset.buf30};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf30_ref() && {
      return {std::move(this->buf30_), __isset.buf30};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf31_ref() const& {
    return {this->buf31_, __isset.buf31};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf31_ref() & {
    return {this->buf31_, __isset.buf31};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf31_ref() && {
      return {std::move(this->buf31_), __isset.buf31};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf32_ref() const& {
    return {this->buf32_, __isset.buf32};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf32_ref() & {
    return {this->buf32_, __isset.buf32};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf32_ref() && {
      return {std::move(this->buf32_), __isset.buf32};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf33_ref() const& {
    return {this->buf33_, __isset.buf33};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf33_ref() & {
    return {this->buf33_, __isset.buf33};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf33_ref() && {
      return {std::move(this->buf33_), __isset.buf33};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf34_ref() const& {
    return {this->buf34_, __isset.buf34};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf34_ref() & {
    return {this->buf34_, __isset.buf34};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf34_ref() && {
      return {std::move(this->buf34_), __isset.buf34};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf35_ref() const& {
    return {this->buf35_, __isset.buf35};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf35_ref() & {
    return {this->buf35_, __isset.buf35};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf35_ref() && {
      return {std::move(this->buf35_), __isset.buf35};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf36_ref() const& {
    return {this->buf36_, __isset.buf36};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf36_ref() & {
    return {this->buf36_, __isset.buf36};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf36_ref() && {
      return {std::move(this->buf36_), __isset.buf36};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf37_ref() const& {
    return {this->buf37_, __isset.buf37};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf37_ref() & {
    return {this->buf37_, __isset.buf37};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf37_ref() && {
      return {std::move(this->buf37_), __isset.buf37};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf38_ref() const& {
    return {this->buf38_, __isset.buf38};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf38_ref() & {
    return {this->buf38_, __isset.buf38};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf38_ref() && {
      return {std::move(this->buf38_), __isset.buf38};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf39_ref() const& {
    return {this->buf39_, __isset.buf39};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf39_ref() & {
    return {this->buf39_, __isset.buf39};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf39_ref() && {
      return {std::move(this->buf39_), __isset.buf39};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const folly::IOBuf&>
   buf40_ref() const& {
    return {this->buf40_, __isset.buf40};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&>
   buf40_ref() & {
    return {this->buf40_, __isset.buf40};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<folly::IOBuf&&>
   buf40_ref() && {
      return {std::move(this->buf40_), __isset.buf40};
  }
  

  template <class Writer>
  void serialize(Writer&& writer) const;

  void deserialize(carbon::CarbonProtocolReader& reader);

  template <class V>
  void visitFields(V&& v);
  template <class V>
  void visitFields(V&& v) const;

 private:
  struct __isset {
    bool buf1;
    bool buf2;
    bool buf3;
    bool buf4;
    bool buf5;
    bool buf6;
    bool buf7;
    bool buf8;
    bool buf9;
    bool buf10;
    bool buf11;
    bool buf12;
    bool buf13;
    bool buf14;
    bool buf15;
    bool buf16;
    bool buf17;
    bool buf18;
    bool buf19;
    bool buf20;
    bool buf21;
    bool buf22;
    bool buf23;
    bool buf24;
    bool buf25;
    bool buf26;
    bool buf27;
    bool buf28;
    bool buf29;
    bool buf30;
    bool buf31;
    bool buf32;
    bool buf33;
    bool buf34;
    bool buf35;
    bool buf36;
    bool buf37;
    bool buf38;
    bool buf39;
    bool buf40;
  } __isset = {};

  folly::IOBuf buf1_;
  folly::IOBuf buf2_;
  folly::IOBuf buf3_;
  folly::IOBuf buf4_;
  folly::IOBuf buf5_;
  folly::IOBuf buf6_;
  folly::IOBuf buf7_;
  folly::IOBuf buf8_;
  folly::IOBuf buf9_;
  folly::IOBuf buf10_;
  folly::IOBuf buf11_;
  folly::IOBuf buf12_;
  folly::IOBuf buf13_;
  folly::IOBuf buf14_;
  folly::IOBuf buf15_;
  folly::IOBuf buf16_;
  folly::IOBuf buf17_;
  folly::IOBuf buf18_;
  folly::IOBuf buf19_;
  folly::IOBuf buf20_;
  folly::IOBuf buf21_;
  folly::IOBuf buf22_;
  folly::IOBuf buf23_;
  folly::IOBuf buf24_;
  folly::IOBuf buf25_;
  folly::IOBuf buf26_;
  folly::IOBuf buf27_;
  folly::IOBuf buf28_;
  folly::IOBuf buf29_;
  folly::IOBuf buf30_;
  folly::IOBuf buf31_;
  folly::IOBuf buf32_;
  folly::IOBuf buf33_;
  folly::IOBuf buf34_;
  folly::IOBuf buf35_;
  folly::IOBuf buf36_;
  folly::IOBuf buf37_;
  folly::IOBuf buf38_;
  folly::IOBuf buf39_;
  folly::IOBuf buf40_;
};

class McExpTestRequest {
 public:

  McExpTestRequest() = default;
  McExpTestRequest(const McExpTestRequest&) = default;
  McExpTestRequest& operator=(const McExpTestRequest&) = default;
  McExpTestRequest(McExpTestRequest&&) = default;
  McExpTestRequest& operator=(McExpTestRequest&&) = default;
  explicit McExpTestRequest(folly::StringPiece sp)
      : key_(sp) {}
  explicit McExpTestRequest(folly::IOBuf&& carbonKey)
      : key_(std::move(carbonKey)) {}

  const carbon::Keys<folly::IOBuf>& key() const {
    return key_;
  }
  carbon::Keys<folly::IOBuf>& key() {
    return key_;
  }
  uint64_t flags() const {
    return flags_;
  }
  uint64_t& flags() {
    return flags_;
  }
  uint64_t deadlineMs() const {
    return deadlineMs_;
  }
  uint64_t& deadlineMs() {
    return deadlineMs_;
  }
  FOLLY_ERASE ::apache::thrift::field_ref<const carbon::Keys<folly::IOBuf>&>
   key_ref() const& {
    return {this->key_, __isset.key};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<carbon::Keys<folly::IOBuf>&>
   key_ref() & {
    return {this->key_, __isset.key};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<carbon::Keys<folly::IOBuf>&&>
   key_ref() && {
      return {std::move(this->key_), __isset.key};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const uint64_t&>
   flags_ref() const& {
    return {this->flags_, __isset.flags};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<uint64_t&>
   flags_ref() & {
    return {this->flags_, __isset.flags};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<uint64_t&&>
   flags_ref() && {
      return {std::move(this->flags_), __isset.flags};
  }
  
  FOLLY_ERASE ::apache::thrift::field_ref<const uint64_t&>
   deadlineMs_ref() const& {
    return {this->deadlineMs_, __isset.deadlineMs};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<uint64_t&>
   deadlineMs_ref() & {
    return {this->deadlineMs_, __isset.deadlineMs};
  }
  FOLLY_ERASE ::apache::thrift::field_ref<uint64_t&&>
   deadlineMs_ref() && {
      return {std::move(this->deadlineMs_), __isset.deadlineMs};
  }
  

  template <class Writer>
  void serialize(Writer&& writer) const;

  void deserialize(carbon::CarbonProtocolReader& reader);

  template <class V>
  void visitFields(V&& v);
  template <class V>
  void visitFields(V&& v) const;

 private:
  struct __isset {
    bool key;
    bool flags;
    bool deadlineMs;
  } __isset = {};

  carbon::Keys<folly::IOBuf> key_;
  uint64_t flags_{0};
  uint64_t deadlineMs_{0};
};
} // namespace test
} // namespace memcache
} // namespace facebook

#include "CarbonTestMessages-inl.h"
